{"version":3,"sources":["components/Form.jsx","components/Task.jsx","components/Tasks.jsx","App.js","index.js"],"names":["Form","onAdd","useState","taskName","setTaskName","placeholder","onChange","e","target","value","type","vairant","mb","mr","colorScheme","onClick","disabled","length","Task","task","onDelete","onToggle","onEdit","direction","bgGradient","rounded","m","width","d","p","as","status","name","ml","size","id","Tasks","tasks","map","App","setTasks","toast","useToast","useEffect","date","Date","now","toggleTheme","useColorMode","alignContent","alignItems","bgClip","uuidv4","title","description","duration","isClosable","filter","message","localStorage","getItem","setItem","JSON","stringify","ReactDOM","render","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.49be12ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/layout\";\r\nimport { Input, Button } from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Form = ({ onAdd }) => {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n\r\n  return (\r\n    <Flex>\r\n      <Input\r\n        placeholder=\"Do Homework\"\r\n        onChange={(e) => {\r\n          setTaskName(e.target.value);\r\n        }}\r\n        value={taskName}\r\n        type=\"text\"\r\n        vairant=\"filled\"\r\n        mb={3}\r\n        mr={2}\r\n      />\r\n\r\n      <Button\r\n        colorScheme=\"teal\"\r\n        onClick={() => {\r\n          onAdd(taskName);\r\n          setTaskName(\"\");\r\n        }}\r\n        disabled={taskName.length === 0}\r\n        type=\"submit\"\r\n      >\r\n        Add\r\n      </Button>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Button, Text } from \"@chakra-ui/react\";\r\nimport { Flex, Box } from \"@chakra-ui/layout\";\r\nimport { FaTrash, FaPen, FaCheckCircle } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle, onEdit }) => {\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      bgGradient=\"linear(to-r,gray.100,gray.200,gray.300)\"\r\n      rounded={5}\r\n      m={1}\r\n    >\r\n      <Box width=\"100%\" d=\"flex\" p={2}>\r\n        <Text as={task.status === \"complete\" ? \"s\" : \"\"}> {task.name} </Text>\r\n        <span>\r\n          <Button colorScheme=\"twitter\" rounded={50} ml={3} size=\"xs\">\r\n            <FaPen />\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            onClick={() => onToggle(task.id)}\r\n            ml={1}\r\n            rounded={50}\r\n            size=\"xs\"\r\n          >\r\n            <FaCheckCircle />\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"red\"\r\n            onClick={() => onDelete(task.id)}\r\n            rounded={50}\r\n            ml={1}\r\n            size=\"xs\"\r\n          >\r\n            <FaTrash />\r\n          </Button>\r\n        </span>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/layout\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle, onEdit }) => {\r\n  return (\r\n    <Flex direction=\"column\">\r\n      {tasks.map((task) => (\r\n        <Task\r\n          onDelete={onDelete}\r\n          key={task.id}\r\n          onToggle={onToggle}\r\n          task={task}\r\n        />\r\n      ))}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Flex, Heading } from \"@chakra-ui/react\";\nimport { useColorMode, Button } from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport Form from \"./components/Form\";\nimport Tasks from \"./components/Tasks\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const toast = useToast();\n\n  useEffect(() => {\n    setTasks([\n      {\n        id: 1,\n        name: \"Hey there\",\n        status: \"complete\",\n        date: Date.now(),\n      },\n    ]);\n  }, []);\n\n  const handleDelete = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n\n    toast({\n      title: \"Success\",\n      description: \"Task Removed\",\n      status: \"success\",\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  const handleEdit = (id, name) => {\n    setTasks(\n      tasks.map(function (task) {\n        if (task.id === id) task.name = name;\n        return task;\n      })\n    );\n  };\n\n  const handleAdd = (name) => {\n    let task = {\n      id: uuidv4(),\n      name: name,\n      status: \"incomplete\",\n      date: Date.now(),\n    };\n    setTasks([...tasks, task]);\n\n    toast({\n      title: \"Success\",\n      description: \"New Task Added\",\n      status: \"success\",\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  const handleToggle = (id) => {\n    let message = \"\";\n    setTasks(\n      tasks.map(function (task) {\n        if (task.id === id)\n          if (task.status === \"complete\") {\n            task.status = \"incomplete\";\n            message = \"Task Marked Incomplete\";\n          } else {\n            task.status = \"complete\";\n            message = \"Task Marked Complete\";\n          }\n        return task;\n      })\n    );\n\n    toast({\n      title: \"Success\",\n      description: message,\n      status: \"success\",\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  const { toggleTheme } = useColorMode();\n\n  return (\n    <Flex direction=\"column\" alignContent=\"center\" alignItems=\"center\">\n      <Flex direction=\"column\">\n        <Heading\n          mb={2}\n          bgGradient=\"linear(to-r,cyan.400,blue.500,purple.600)\"\n          bgClip=\"text\"\n        >\n          {\" \"}\n          Task Manager\n        </Heading>\n\n        <Form onAdd={handleAdd} tasks={tasks} />\n        <Tasks\n          tasks={tasks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          onToggle={handleToggle}\n        />\n        <Button onClick={toggleTheme}>Toggle Theme</Button>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nif (!localStorage.getItem(\"tasks\"))\n  localStorage.setItem(\"tasks\", JSON.stringify([]));\n\nReactDOM.render(\n  <Router>\n    <ChakraProvider>\n      <Route path=\"/\" exact>\n        <App />\n      </Route>\n      <Route path=\"/test\"></Route>\n    </ChakraProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}